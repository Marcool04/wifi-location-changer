#!/bin/bash

# retirect output to log
# size: 1Mb
# max logs: 10
# see https://serverfault.com/a/445461
exec > >(multilog t s1048576 n10 "/Users/mark/Library/Logs/mark.locationchanger") 2>&1

# get a little breather before we get data for things to settle down
sleep 2

echo "Starting locationchanger"
# Escape problematic caracters before passing strings to egrep or grep
# see discussion on:
# https://stackoverflow.com/questions/11856054/bash-easy-way-to-pass-a-raw-string-to-grep
egrep_quote() {
  string="$*"
  echo "${string//\[\]\.|\$\(\){\}\?\+\*\^]/\\&}"
}
grep_quote() {
  string="$*"
  echo "${string//^\$\[\]*.\/\\&}"
}

# get various system information
SSID="$(/System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Resources/airport -I\
 | grep ' SSID:' | sed s/.*SSID:\ // | tr -d ' ')"

# basic pattern matching to get all location names separated by newlines
LOCATION_NAMES="$(scselect | tail -n +2 | rev | cut -f 1 | cut -c 2- | rev | cut -c 2-)"
CURRENT_LOCATION="$(scselect | grep " \* " | cut -d "(" -f 2 | cut -d ")" -f 1)"

# no brackets as we the grep will return a status code depending on whether the SSID has an own Location
if echo "$LOCATION_NAMES" | grep -E -q "^$(egrep_quote "$SSID")$"; then
  NEW_LOCATION="$SSID"
else
  # auto does not seem to be working on Mac OS X Lion, but Automatic does
  if echo Automatic | grep -q "$(grep_quote "$LOCATION_NAMES")"; then
    NEW_LOCATION=Automatic
  elif echo auto | grep -q "$(grep_quote "$LOCATION_NAMES")"; then
    NEW_LOCATION=auto
  else
    echo "Automatic location was not found!"
    echo "The following locations are known:"
    echo "$LOCATION_NAMES"
  fi
fi

if [[ -n "$NEW_LOCATION" ]] && [[ "$NEW_LOCATION" -ne "$CURRENT_LOCATION" ]]; then
    echo "Changing to $NEW_LOCATION"
    scselect "$NEW_LOCATION"
fi
